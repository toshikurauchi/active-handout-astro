---
import type { NavTreeItem } from "./nav-tree";

interface Props {
  entries: NavTreeItem[];
  nested?: boolean;
}

const { entries, nested } = Astro.props;
---

<ul class:list={{ "top-level": !nested }}>
  {
    entries.map((entry) => (
      <li>
        {!entry.children && <a href={entry.url}>{entry.title}</a>}
        {entry.children && (
          <details open>
            <summary>
              <a href={entry.url}>{entry.title}</a>
            </summary>
            <Astro.self entries={entry.children} nested={true} />
          </details>
        )}
      </li>
    ))
  }
</ul>

<style lang="scss">
  summary::marker {
    color: var(--clr-accent);
  }

  ul {
    list-style: none;
    margin: 0 0 0.5rem 1.5rem;
    height: 100%;
    padding: 0;
    border-left: 1px solid #3332;

    &.top-level {
      margin-left: 0.5em;
      border-left: none;
    }
  }

  li {
    display: flex;
    flex-direction: column;
  }

  a {
    position: relative;
    text-decoration: none;
    padding: 0.1em 0.5rem;
    border-radius: 0.2em;

    &.current {
      background-color: var(--clr-secondary);

      &::before {
        content: "";
        position: absolute;
        left: -0.5em;
        top: 0;
        bottom: 0;
        width: 0.25em;
        background-color: var(--clr-accent);
        border-radius: 0.5em;
      }
    }

    &:hover {
      background-color: var(--clr-secondary);
    }
  }
</style>
