---
/* Code from https://docs.astro.build/en/tutorial/6-islands/2/ */
const iconWidth = "1.5em"; // This must result in 1em when added to the padding of the button
---

<button id="themeToggle">
  <svg width={iconWidth} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path
      class="sun"
      fill-rule="evenodd"
      d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
    ></path>
  </svg>
  <svg width={iconWidth} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path
      class="moon"
      fill-rule="evenodd"
      d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
    ></path>
  </svg>
</button>

<style lang="scss">
  $icon-size: 1.5em;
  $padding: 0.1em;

  * {
    $transition-duration: 0.2s;
    transition:
      background-color $transition-duration ease-in-out,
      color $transition-duration ease-in-out,
      border-color $transition-duration ease-in-out;
  }

  button {
    cursor: pointer;
  }

  #themeToggle {
    display: flex;
    position: relative;
    grid-template-columns: 1fr 1fr;
    border: 1px solid var(--clr-border-secondary);
    border-radius: calc(($icon-size + 2 * $padding) / 2);
    background-color: var(--clr-background-secondary);
    padding: $padding;
    isolation: isolate;

    &::before {
      content: "";
      position: absolute;
      left: $padding;
      background-color: var(--clr-secondary-contrast);
      width: $icon-size;
      height: $icon-size;
      border-radius: 50%;
      transition: left 0.2s ease-in-out;
    }
  }

  svg {
    z-index: 1;
    padding: 0.2em;
  }

  .sun {
    fill: var(--clr-background-secondary);
  }
  .moon {
    fill: var(--clr-border-secondary);
  }

  :global(.dark) {
    #themeToggle::before {
      left: calc(100% - #{$icon-size} - #{$padding * 2});
    }

    .sun {
      fill: var(--clr-border-secondary);
    }
    .moon {
      fill: var(--clr-background-secondary);
    }
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  // @ts-ignore
  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  // @ts-ignore
  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);
</script>
