---
import config from "virtual:active-handout/user-config";
import { getAutoIncrementedExerciseNumber } from "../exercise-utils";
import {
  createOrGetExerciseFromCache,
  getLatestSubmissionFromCache,
} from "../server-telemetry";
import Component, { exerciseType } from "./ReactComponent";

const handoutPath = Astro.url.pathname;

interface Props {
  slug: string;
  tags: string[];
}

if (!Astro.props.tags) {
  Astro.props.tags = [];
}
const { slug, tags } = Astro.props;
tags.push("progress-exercise");

const exercise = await createOrGetExerciseFromCache(
  Astro.locals,
  handoutPath,
  slug,
  exerciseType,
  tags,
  {}
);
const exerciseNumber = getAutoIncrementedExerciseNumber(Astro.locals, exercise);

let latestSubmission;
if (config.auth && config.telemetry) {
  const handout = Astro.locals.handout;
  const user = Astro.locals.user;

  if (!handout) {
    throw new Error("No handout found for exercise " + slug);
  }
  if (!user) {
    throw new Error("No user found");
  }
  latestSubmission = await getLatestSubmissionFromCache(
    Astro.locals,
    handout.uri,
    slug,
    user.uid
  );
}
---

<Component
  pageId={handoutPath}
  slug={slug}
  exerciseNumber={exerciseNumber}
  latestSubmission={latestSubmission}
  client:visible
>
  <slot />
</Component>
