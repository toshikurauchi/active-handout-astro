---
import { getEntry } from 'astro:content';
import config from 'virtual:active-handout/user-config';
import EmptyContent from './components/EmptyMarkdown.md';
import Page from './layout/Page.astro';
import type { ActiveHandoutEntry } from './utils/routing';
import { useTranslations } from './utils/translations';

const { lang = 'en', dir = 'ltr', locale } = config.defaultLocale || {};
const entryMeta = { dir, lang, locale };
const t = useTranslations(locale);

const fallbackEntry: ActiveHandoutEntry = {
  slug: '404',
  id: '404.md' as ActiveHandoutEntry['id'],
  body: '',
  collection: 'handouts',
  data: {
    title: '404',
    template: 'splash',
  },
  render: async () => ({
    Content: EmptyContent,
    headings: [],
    remarkPluginFrontmatter: {},
  }),
};

const userEntry = await getEntry('handouts', '404');
const entry = userEntry || fallbackEntry;
const { Content, headings } = await entry.render();
---

<Page {headings} entry={entry} id={entry.id} slug={entry.slug} {...entryMeta} {entryMeta}>
  <Content />
</Page>