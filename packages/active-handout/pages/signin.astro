---
import config from "virtual:active-handout/user-config";
import AuthPage from "../layout/AuthPage.astro";
import LoginForm from "../fragments/login/ReactLoginForm.tsx";
import GoogleSigninButton from "../components/signin-buttons/google/GoogleSigninButton.astro";
import { useTranslations } from "../utils/translations";
import Or from "../components/Or.astro";
import GitHubSigninButton from "../components/signin-buttons/github/GitHubSigninButton.astro";

const t = useTranslations(config.lang);

if (config.auth) {
  const user = Astro.locals.user;
  if (user) {
    return Astro.redirect(Astro.url.searchParams.get("next") || "/");
  }
}

const showExternalAuth = config.useGoogleAuth || config.useGitHubAuth;
const showOr = config.useEmailAuth && showExternalAuth;
---

<AuthPage title={t("auth.signin-title")}>
  <div class="form-container">
    <h1>{t("auth.signin-title")}</h1>

    {
      config.useEmailAuth && (
        <LoginForm action="/api/auth/signin" client:visible />
      )
    }

    {showOr && <Or />}

    {
      showExternalAuth && (
        <div class="external-auth">
          {config.useGoogleAuth && <GoogleSigninButton />}
          {config.useGitHubAuth && <GitHubSigninButton />}
        </div>
      )
    }

    {
      config.useEmailAuth && (
        <p class="no-account">
          {t("auth.no-account")}
          <a href="/register">{t("auth.create-account")}</a>
        </p>
      )
    }
  </div>
</AuthPage>

<style>
  p.no-account {
    font-size: var(--fnt-sz--1);
    margin-top: 3em;
  }

  .external-auth {
    margin-top: 2em;
  }
</style>
 ../fragments/login/LoginForm.tsx
